# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: MIT
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

[package]
title = "Microsoft USD Viewer"
version = "0.1.0"
description = """This application presents an interactive experience authored with OpenUSD. The application can be hosted on RTX hardware and streamed to other devices. Messaging supports bi-directional communication between this application and the client that incorporates the stream"""
keywords = ["app"]  # Extension Manager keyword for filtering.
template_name = "omni.usd_viewer"

[dependencies]
"omni.anim.curve.core" = {}
"omni.anim.timeline" = {}
"omni.graph.action" = {}
"omni.graph.nodes" = {}
"omni.graph.scriptnode" = {}
"omni.graph.ui_nodes" = {}
"omni.hydra.rtx" = {}
"omni.hydra.usdrt_delegate" = {}
"omni.kit.manipulator.camera" = {}
"omni.kit.manipulator.selection" = {}
"omni.kit.renderer.core" = {}
"omni.kit.sequencer.core" = {}
"omni.kit.uiapp" = {}
"omni.kit.viewport.utility" = {}
"omni.kit.viewport.window" = {}
"omni.no_code_ui.bundle" = {}
"omni.ujitso.client" = {}
"usdrt.scenegraph" = {}
"msft.usd_viewer.setup" = { order = 1000 }


[settings.persistent.app]
viewport.defaults.tickRate = 60  # Lock to 60fps
viewport.noPadding = true  # Remove default frame around viewport
viewport.outline.width = 2 # selection width

[settings.persistent.exts]
"omni.kit.window.sequencer".useSequencerCamera = true  # Sequencer Camera Sync ON

[settings.persistent]
metricsAssembler.showUnitsOverlay = false
omnigraph.useSchemaPrims = true
omnigraph.disablePrimNodes = false
rtx.mdltranslator.distillMaterial = true  # Render Preferences - Material Distilling ON
rtx-transient.resourcemanager.enableTextureStreaming = true  # Texture Streaming

[settings.app]
titleVersion = "0.1.0"
content.emptyStageOnStart = false  # Avoids creation of an empty stage on application startup.
fastShutdown = true  # Skip long full shutdown and exit quickly
livestream.allowResize = 1
livestream.skipCapture = 1  # livestream skipCapture ON for local streaming
name = "Microsoft USD Viewer"
renderer.resolution.width = 1920
renderer.resolution.height = 1080
useFabricSceneDelegate = true  # Turn on the Fabric scene delegate by default

[settings.app.usdrt.population.utils]
mergeInstances = false
mergeMaterials = false

[settings.app.viewport.defaults]
fillViewport = true
guide.grid.visible = false
guide.axis.visible = false
hud.visible = false
scene.cameras.visible = false
scene.lights.visible = false

[settings.app.exts]
folders.'++' = [  # Search paths for extensions.
    "${app}/../exts",
    "${app}/../extscache/"
]

[settings.app.file]
ignoreUnsavedOnExit = true  # enable quitting without confirmation

[settings.app.font]
file = "${fonts}/OpenSans-SemiBold.ttf"
size = 16

[settings.app.layout]  # this is a custom setting used in our app setup to choose the Layout
name = "default"

[settings.app."omni.graph.scriptnode"]
opt_in = true

[settings.app.window]
title = "Microsoft USD Viewer"
width = 1920
height = 1080
x = -1
y = -1

[settings.exts]
"omni.kit.renderer.core".present.enabled = true  # Enable the present thread
"omni.kit.renderer.core".present.presentAfterRendering = true  # Ensure the present thread waits for the rendering to complete
"omni.kit.viewport.window".startup.windowName = "Viewport"  # force new viewport name
"omni.kit.window.viewport".showContextMenu = false  # Disable context menu, viewer not editor.

[settings]
renderer.enabled = "rtx"  # enable rtx renderer
# By default rtx is setup to be mgpu but in some context you might want to run on
# a single gpu if so set this setting to false
renderer.multiGpu.enabled = true
rendergraph.maxFramesInFlight = 2
rtx-transient.dlssg.enabled=false  # Disable DLSS otherwise it can push the framerate above the locked limit

[settings.exts."omni.appwindow"]
listenF11 = false
listenF7 = false

[settings.telemetry]
# Anonymous Kit application usage telemetry
enableAnonymousData = true
enableAnonymousAppName = true

[settings.UJITSO]
# UJITSO supports loading cached representations of assets.
# These settings controls what is loaded from cache and where from.
enabled = true	# Enable or disable the use of UJITSO cache.
textures = true
geometry = true
materials = true
datastore.localCachePath=""	# The absolute path to the root directory containing cached assets.
readCacheWithAssetRoot=""	# The absolute path to the root directory containing the original non-cached assets.



# Tests
################################
[[test]]

dependencies = [
    "msft.usd_viewer.setup.tests"
]

args = [
	"--/app/window/width=480",
    "--/app/window/height=480",
    "--/app/extensions/registryEnabled=0", # Make sure we can run without registry and everything is precached
]

[template]
type = "ApplicationTemplate" # Repo Template Metadata
