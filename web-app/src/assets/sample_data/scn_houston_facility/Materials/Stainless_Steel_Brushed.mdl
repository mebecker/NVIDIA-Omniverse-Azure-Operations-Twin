/******************************************************************************
 *	 Copyright 2024 NVIDIA Corporation. All rights reserved.	 *
 ******************************************************************************
 
Permission is hereby granted by NVIDIA Corporation ("NVIDIA"), free of charge,
to any person obtaining a copy of the sample definition code that uses our 
Material Definition Language (the "MDL Materials"), to reproduce and distribute
the MDL Materials, including without limitation the rights to use, copy, merge,
publish, distribute, and sell modified and unmodified copies of the MDL 
Materials, and to permit persons to whom the MDL Materials is furnished to do
so, in all cases solely for use with NVIDIA's Material Definition Language,
subject to the following further conditions:

1. The above copyright notices, this list of conditions, and the disclaimer
that follows shall be retained in all copies of one or more of the MDL
Materials, including in any software with which the MDL Materials are bundled,
redistributed, and/or sold, and included either as stand-alone text files,
human-readable headers or in the appropriate machine-readable metadata fields
within text or binary files as long as those fields can be easily viewed by the
user, as applicable.
2. The name of NVIDIA shall not be used to promote, endorse or advertise any 
Modified Version without specific prior written permission, except a) to comply
 with the notice requirements otherwise contained herein; or b) to acknowledge
the contribution(s) of NVIDIA.

THE MDL MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT,
TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL NVIDIA CORPORATION BE LIABLE FOR 
ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, 
INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF 
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE
THE MDL MATERIALS OR FROM OTHER DEALINGS IN THE MDL MATERIALS.
*/

mdl 1.6;

import ::anno::*;
import ::base::*;
import ::df::*;
import ::math::*;
import ::state::*;
import ::tex::*;
import ::nvidia::core_definitions::blend_colors;
import ::nvidia::core_definitions::dimension;

const string COPYRIGHT = 
" Copyright 2024 NVIDIA Corporation. All rights reserved.\n"
" MDL MATERIALS ARE PROVIDED PURSUANT TO AN END USER LICENSE  AGREEMENT,\n"
" WHICH WAS ACCEPTED IN ORDER TO GAIN ACCESS TO THIS FILE.  IN PARTICULAR,\n" 
" THE MDL MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n"
" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\n"
" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF\n" 
" COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL NVIDIA\n"
" CORPORATION BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY\n"
" GENERAL, SPECIAL,  INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN\n"
" AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR\n"
" INABILITY TO USE THE MDL MATERIALS OR FROM OTHER DEALINGS IN THE MDL MATERIALS.\n";

const string DESCRIPTION = 
"A stainless steel material with adjustable roughness and controls to add secondary effects \n"
"such as stains, smudges and mechanical damage";


::base::texture_coordinate_info vmat_transform_post_scale(
	::base::texture_coordinate_info uvw,
	float2 scale = float2(1.0f)
)
{
	return ::base::texture_coordinate_info(
		position: float3(uvw.position.x / scale.x,
						uvw.position.y / scale.y,
						uvw.position.z),
		tangent_u: uvw.tangent_u,
		tangent_v: uvw.tangent_v
	);
}

float3 normalmap_normal(
	uniform texture_2d texture,
	float factor = 1.0,
	::base::texture_coordinate_info uvw = ::base::texture_coordinate_info()
)
{
	float3 lookup = (::tex::lookup_float3(texture, float2(uvw.position.x, uvw.position.y)) - float3(0.5)) * (factor * 2.0);
	return ::math::normalize(uvw.tangent_u * lookup.x + uvw.tangent_v * lookup.y + state::normal() * (lookup.z + (1.0 - factor)));
}

float overlay(float base, float layer, float weight)
{
	return base + (1.0f - base) * layer * weight;
}

// Returns the normal n in tangent space, given n is in internal space.
float3 transform_internal_to_tangent(float3 n)
[[ 
	anno::hidden() 
]]
{
	return
		n.x* float3(state::texture_tangent_u(0).x,state::texture_tangent_v(0).x,state::normal().x)+
		n.y* float3(state::texture_tangent_u(0).y,state::texture_tangent_v(0).y,state::normal().y)+
		n.z* float3(state::texture_tangent_u(0).z,state::texture_tangent_v(0).z,state::normal().z);
}

// Returns the normal n in internal space, given n is in tangent space.
float3 transform_tangent_to_internal(float3 n)
[[ 
	anno::hidden() 
]]
{
	return  state::texture_tangent_u(0) * n.x +
			state::texture_tangent_v(0) * n.y +
			state::normal() * n.z ;
}



// Returns a normal by adding a detail normal to a global normal.
// If detail blending of two normal maps gives visual artifacts, check if texture_2d are loaded
// correctly with tex::gamma_linear
float3 add_detail_normal(float3 nd = state::normal(), float3 n = state::normal())
{
	// http://blog.selfshadow.com/publications/blending-in-detail/
	float3 n_t = transform_internal_to_tangent(n);
	float3 nd_t = transform_internal_to_tangent(nd);

	n_t=n_t + float3(0.,0.,1.);
	nd_t = nd_t *  float3(-1.,-1.,1.);
	n = n_t*math::dot(n_t, nd_t)/n_t.z - nd_t;
	return ::math::normalize(transform_tangent_to_internal(n));
}



float3 srgb2rgb(float3 val)
{
	return ::math::pow(::math::max(val, float3(0.0f)), 2.2);
}


float uint2float(int x)
{
	return float(x & 0x7FFFFFFF) + (x < 0 ? 2147483648.0 : 0.0);
}

int lowbias32(int x)
{
	x ^= x >>> 16;
	x *= 0x7feb352d;
	x ^= x >>> 15;
	x *= 0x846ca68b;
	x ^= x >>> 16;
	return x;
}

float2 rnd22(int2 p) {
	float2 ret_val = float2(
		uint2float(lowbias32(p[0] + lowbias32(p[1]))) / 4294967296.f,
		uint2float(lowbias32(p[0] + 32000 + lowbias32(p[1]))) / 4294967296.f
	);
	return ret_val;
}	

::base::texture_coordinate_info vmat_transform(
								uniform float2 translation = float2(0.0, 0.0),
								uniform float rotation	 = 0.0,
								uniform float2 scaling	 = float2(1.0, 1.0),
								uniform ::base::texture_coordinate_system system = ::base::texture_coordinate_uvw,
								uniform int uv_space	   = 0
)
{
	float4x4 scale =
	float4x4(1.0 /scaling.x, 0.			 ,  0. ,	 0.,
			 0.			, 1.0 /scaling.y ,  0. ,	 0.,
			 0.			, 0.			 ,  1.0,	 0.,
			 translation.x , translation.y  ,  0.0,	 1.);

	float s = ::math::sin(rotation);
	float c = ::math::cos(rotation);
	float4x4 rotate =
	float4x4(  c  ,  -s   , 0.0 , 0.0,
			   s  ,   c   , 0.0 , 0.0,
			   0.0,   0.0 , 1.0 , 0.0,
			   0. ,   0.0 , 0.0 , 1.);
	
	return ::base::transform_coordinate(scale*rotate, ::base::coordinate_source(system, uv_space));
}

float2x2 invert_2x2(float2x2 M)
{
	float det = M[0][0]*M[1][1] - M[0][1]*M[1][0];
	//https://www.chilimath.com/lessons/advanced-algebra/inverse-of-a-2x2-matrix/
	return (1.0 / det) * float2x2(M[1][1], -M[0][1], -M[1][0], M[0][0]);
}

float3 nonrepeat_lookup(
	uniform texture_2d texture = texture_2d(),
	::base::texture_coordinate_info uvw = ::base::coordinate_source(),
	float texture_scale = 1.0,
	float3 average_color = float3(0.5),
	float patch_size = 8.0
)
{
	
	float2 uv_in = float2(uvw.position[0], uvw.position[1]) * texture_scale;
	float Z =  patch_size;	 // patch scale inside example texture
	float CON = 1.0f;
	
	float3 O = float3(0.f);
	float2x2 M0 = float2x2(1.f,0.f, 0.5f, ::math::sqrt(3.f)/2.f);
	float2x2 M = invert_2x2(M0); // transform matrix <-> tilted space
	
	float2 U = uv_in;
	float2 V = M * uv_in; //pre-tilted hexa coordinates
	int2 I = int2(::math::floor(V)); // hexa-tile id
	
	// The mean color needs to be determined in Photoshop then to make the
	// average color work out, take the float value and calculate the apropriate
	// mean value as (value^(1/2.2))

	float3 m = average_color;
	
	float3 F = float3(::math::frac(V)[0], ::math::frac(V)[1], 0.f), W;
	F[2] = 1.0 - F[0] - F[1]; // local hexa coordinates
	
	if( F[2] > 0.f )

		O = (W[0] = F[2]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I))) - m*float(CON))
		  + (W[1] = F[1]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I+int2(0,1)))) - m*float(CON))
		  + (W[2] = F[0]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I+int2(1,0)))) - m*float(CON));
	else
		O = (W[0] =	  -F[2]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I+int2(1))))   - m*float(CON))
		  + (W[1] = 1.f - F[1]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I+int2(1, 0)))) - m*float(CON))
		  + (W[2] = 1.f - F[0]) * (( ::tex::lookup_float3(texture, U/Z-rnd22(I+int2(0, 1)))) - m*float(CON));
	O = m + O/::math::length(W);
	O = ::math::clamp( (O), 0.0, 1.0);
	
	return float3(O);
}


float histogram_range(float input, float range, float position)
{	
	float low = ::math::clamp(1.0 - ::math::min(((1.0 - position) + range * 0.5), (1.0 - position) * 2), 0.0, 1.0);
	float high = ::math::clamp(::math::min((position + range * 0.5 ), position * 2.0), 0.0, 1.0);
	return ::math::lerp(low, high, input);
}


color endless_texture(
	uniform texture_2d texture = texture_2d(),
	::base::texture_coordinate_info uvw = ::base::coordinate_source(),
	float texture_scale = 10.0,
	float3 average_color = float3(0.5, 0.5, 1.0),
	float patch_size = 8.0,
	bool gamma_correct_lookup = true
)
{
	return gamma_correct_lookup ? color(srgb2rgb(
			nonrepeat_lookup (
				texture: texture,
				uvw: uvw,
				texture_scale: texture_scale,
				average_color: average_color,
				patch_size: patch_size
			))
		) : color(nonrepeat_lookup (
			texture: texture,
			uvw: uvw,
			texture_scale: texture_scale,
			average_color: average_color,
			patch_size: patch_size
		));
}

float3 endless_normal(
	uniform texture_2d texture = texture_2d(),
	float factor = 1.0,
	bool flip_tangent_u = false,
	bool flip_tangent_v = false,
	::base::texture_coordinate_info uvw = ::base::coordinate_source(),
	float texture_scale = 1.0,
	float3 average_color = float3(0.5, 0.5, 1.0),
	float patch_size = 8.0
)
{
	float3 transformed_tangent_u = flip_tangent_u ? uvw.tangent_u : - uvw.tangent_u;
	float3 transformed_tangent_v = flip_tangent_v ? uvw.tangent_v : - uvw.tangent_v;
	
	if (flip_tangent_u)
		transformed_tangent_u=-transformed_tangent_u;
	if (flip_tangent_v)
		transformed_tangent_v=-transformed_tangent_v;

	// normalized Lookup
	float3 tangent_space_normal =
		 (nonrepeat_lookup (
			texture: texture,
			uvw: uvw,
			texture_scale: texture_scale,
			average_color: average_color,
			patch_size: patch_size
		) - 0.5) * (2.0 * factor);
		
	 return ::math::normalize(uvw.tangent_u * tangent_space_normal.x +
		  uvw.tangent_v * tangent_space_normal.y +
		  ::state::normal()*1.0); 
}

export material Stainless_Steel_Brushed(
	uniform bool infinite_tiling = false [[
		::anno::description("Enables infinite tiling feature which removes repeating texture patterns. Note that depending on the material this feature changes the appearance of the material slightly."),
		::anno::display_name("Infinite Tiling"),
		::anno::in_group("Appearance"),
		::anno::ui_order(0)
	]],
	float roughness = 0.18f [[
		::anno::description("Softens the reflections in the direction of the brushing."),
		::anno::display_name("Roughness"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(1)
	]],
	float steel_anisotropy = 0.53f [[
		::anno::description("Higher values lengthen the reflections perpendicular to the brushing direction."),
		::anno::display_name("Roughness Anisotropy"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(2)
	]],
	float cloudiness = 0.5f [[
		::anno::description("Adds a cloudy reflection to the metal material which results in a more grayish appearance."),
		::anno::display_name("Cloudiness"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(3)
	]],
	float brightness = .5f [[
		::anno::description("Low values make the metal darker and add slight variation to the brightness while a high value gives it a bright uniform look."),
		::anno::display_name("Brightness"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(4)
	]],
	float brush_brightness_variation = 0.91f [[
		::anno::description("Enhances the brushing effect by adding variations to the brightness. This makes the overall appearance darker."),
		::anno::display_name("Brushing Brightness Variation"),
		::anno::in_group("Appearance"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(5)
	]],
	float brushing_bump_strength = 0.f [[
		::anno::description("Adds a milled grooves on the metal."),
		::anno::display_name("Brushing Bump Strength"),
		::anno::in_group("Appearance", "Bump"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(6)
	]],
	float dents_bump_strength = 0.f [[
		::anno::description("Adds dents and bumps."),
		::anno::display_name("Dents Bump Strength"),
		::anno::in_group("Appearance", "Bump"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(7)
	]],
	float dents_scale = 1.2f [[
		::anno::description("Scales the size of the dents that are scattered across the surface."),
		::anno::display_name("Dents Scale"),
		::anno::in_group("Appearance", "Bump"),
		::anno::ui_order(8)
	]],
	float smudges_1_weight = 0.f [[
		::anno::description("Adjusts the weight of the primary smudges."),
		::anno::display_name("Smudges Weight"),
		::anno::in_group("Appearance", "Imperfections"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(9)
	]],
	float smudges_2_weight = 0.f [[
		::anno::description("Adjusts the weight of the secondary smudges."),
		::anno::display_name("Stains Weight"),
		::anno::in_group("Appearance", "Imperfections"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(10)
	]],
	float smudges_falloff = 0.1f [[
		::anno::description("Controls the falloff of the smudges on the surface. Low values make the smudges wide and soft while high values make them small."),
		::anno::display_name("Smudges Falloff"),
		::anno::in_group("Appearance", "Imperfections"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(11)
	]],
	float smudges_scale = 2.f [[
		::anno::description("Scales the smudges relative to the overal scale of the material."),
		::anno::display_name("Smudges and Stains Scale"),
		::anno::in_group("Appearance", "Imperfections"),
		::anno::soft_range(0.f, 1.f),
		::anno::ui_order(12)
	]],
	float brightness_variation = 0.0f [[
		::anno::description("A value of 0 makes the material reflect light in a uniform manner while higher values introduce variations to the brightness."),
		::anno::display_name("Brightness Variation"),
		::anno::in_group("Appearance", "Advanced"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(13)
	]],
	float brush_gloss_variation = 0.0f [[
		::anno::description("Adds more variation to the roughness of the brushing with a more uneven and noisy appearance."),
		::anno::display_name("Brushing Gloss Variation"),
		::anno::in_group("Appearance", "Advanced"),
		::anno::hard_range(0.f, 1.f),
		::anno::ui_order(14)
	]],
	uniform float2 texture_translate = float2(0.f) [[
		::anno::description("Controls the position of the texture."),
		::anno::display_name("Texture Translate"),
		::anno::in_group("Transform"),
		::anno::ui_order(15)
	]],
	uniform float texture_rotate = 0.f [[
		::anno::description("Rotates angle of the texture in degrees."),
		::anno::display_name("Texture Rotate"),
		::anno::in_group("Transform"),
		::anno::soft_range(0.f, 360.f),
		::anno::ui_order(16)
	]],
	uniform float2 texture_scale = float2(1.f) [[
		::anno::description("Larger numbers increase the size."),
		::anno::display_name("Texture Scale"),
		::anno::in_group("Transform"),
		::nvidia::core_definitions::dimension(float2(1.0f, 1.0f)),
		::anno::ui_order(17)
	]],
	uniform bool roundcorners_enable = false [[
		::anno::description("Enables the round corner effect. Comes at a slight performance cost as additional raytracing calls are required to evaluate the round corner effect."),
		::anno::display_name("Enable Round Corners"),
		::anno::in_group("Round Corners"),
		::anno::ui_order(18)
	]],
	uniform float roundcorners_radius_mm = 0.5f [[
		::anno::description("Radius of the rounded corners in millimeters."),
		::anno::display_name("Round Corner Radius (mm)"),
		::anno::in_group("Round Corners"),
		::anno::soft_range(0.f, 10.f),
		::anno::ui_order(19)
	]],
	uniform bool roundcorners_across_materials = false [[
		::anno::description("Applies the round corner effect across different materials when enabled."),
		::anno::display_name("Across Materials"),
		::anno::in_group("Round Corners"),
		::anno::ui_order(20)
	]],
	uniform int uv_space_index = 0 [[
		::anno::description("Uses selected UV space for material."),
		::anno::display_name("UV Space Index"),
		::anno::in_group("Advanced"),
		::anno::hard_range(0, 10),
		::anno::ui_order(21)
	]])
[[
	::anno::author("NVIDIA vMaterials"),
	::anno::contributor("Rüdiger Raab"),
	::anno::contributor("Maik Rohland"),
	::anno::display_name("Stainless Steel Brushed"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Stainless_Steel_Brushed.Stainless_Steel_Brushed.png"),
	::anno::key_words(string[]("metal", "steel", "anisotropic", "stainless", "brushed", "design", "kitchen", "sanitary", "construction", "automotive", "architecture", "interior", "exterior", "new", "shiny", "smooth", "reflective", "plain", "gray"))
]]
 = 
	let {
		bool tmp0 = false;
		float2 texture_rescale = texture_scale * 0.33;
		
		material_surface tmp1(::df::custom_curve_layer(0.799999952f, 1.f, 3.0999999f, 1.f, ::df::weighted_layer(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), ::df::microfacet_ggx_smith_bsdf(histogram_range(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), 0.199999988f, 0.300000012f - cloudiness * 0.100000001f), histogram_range(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), 0.199999988f, 0.300000012f - cloudiness * 0.100000001f), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), ::state::texture_tangent_u(0), ::df::scatter_reflect), ::df::weighted_layer(0.799999952f, ::df::microfacet_ggx_smith_bsdf(overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.560000002f, ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation) * overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.560000002f, ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation), overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.189999998f, ::math::lerp(0.099999994f, 0.5f, steel_anisotropy) + ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation) * overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.189999998f, ::math::lerp(0.099999994f, 0.5f, steel_anisotropy) + ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), color(0.f, 0.f, 0.f), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index).tangent_u, ::df::scatter_reflect), bsdf(), add_detail_normal(infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, false, false, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale)), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale))), infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index)))), add_detail_normal(infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, false, false, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale)), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale))), infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index)))), ::df::tint(color(0.f, 0.f, 0.f), ::df::weighted_layer(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), ::df::microfacet_ggx_smith_bsdf(histogram_range(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), 0.199999988f, 0.300000012f - cloudiness * 0.100000001f), histogram_range(overlay(cloudiness * 0.330000013f, overlay(smudges_1_weight * ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).x, ::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).y, smudges_2_weight), 1.f), 0.199999988f, 0.300000012f - cloudiness * 0.100000001f), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), ::state::texture_tangent_u(0), ::df::scatter_reflect), ::df::weighted_layer(0.799999952f, ::df::microfacet_ggx_smith_bsdf(overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.560000002f, ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation) * overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.560000002f, ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation), overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.189999998f, ::math::lerp(0.099999994f, 0.5f, steel_anisotropy) + ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation) * overlay(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 0.189999998f, ::math::lerp(0.099999994f, 0.5f, steel_anisotropy) + ::math::lerp(0.0299999993f, 0.25f, roughness)), float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).x, brush_gloss_variation), color(histogram_range(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.159999996f, 0.569000006f, 0.0460000001f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_multi_R_impurities_G_rough_B_dents.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint).y, 1.f, ::math::lerp(1.f, 0.670000017f, brush_brightness_variation)) * (histogram_range(::math::pow(float3(infinite_tiling ? endless_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), 9.13999939f, float3(0.0599999987f, 0.0500000007f, 0.463f), 8.38000011f, false) : ::base::file_texture(texture_2d("../Textures/stainless_brushed_smudges.jpg", ::tex::gamma_linear), color(0.f, 0.f, 0.f), color(1.f, 1.f, 1.f), ::base::mono_alpha, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(smudges_scale)), float2(0.f, 1.f), float2(0.f, 1.f), ::tex::wrap_repeat, ::tex::wrap_repeat, false, 0.f, int2(0), ::tex::wrap_repeat, 30.f).tint), smudges_falloff + 1.f).z, 1.f, 1.f - brightness_variation * 0.300000012f) * (brightness * 0.300000012f + 0.600000024f))), color(0.f, 0.f, 0.f), vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index).tangent_u, ::df::scatter_reflect), bsdf(), add_detail_normal(infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, false, false, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale)), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale))), infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index)))), add_detail_normal(infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, false, false, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale)), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_damages_norm.jpg", ::tex::gamma_linear), dents_bump_strength, vmat_transform_post_scale(vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), float2(dents_scale))), infinite_tiling ? endless_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, false, false, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index), 9.13999939f, float3(0.5f, 0.5f, 0.999000013f), 8.38000011f) : normalmap_normal(texture_2d("../Textures/stainless_brushed_norm.jpg", ::tex::gamma_linear), brushing_bump_strength * 0.400000006f, vmat_transform(texture_translate, texture_rotate, texture_rescale * 0.200000003f, ::base::texture_coordinate_uvw, uv_space_index))))), ::state::normal()), material_emission(emission: edf(), intensity: color(0.f, 0.f, 0.f), mode: intensity_radiant_exitance));
		material_surface tmp2 = material_surface(scattering: bsdf(), emission: material_emission(emission: edf(), intensity: color(0.f, 0.f, 0.f), mode: intensity_radiant_exitance));
		color tmp3 = color(1.f, 1.f, 1.f);
		material_volume tmp4 = material_volume(scattering: vdf(), absorption_coefficient: color(0.f, 0.f, 0.f), scattering_coefficient: color(0.f, 0.f, 0.f));
		material_geometry tmp5(float3(0.f), 1.f, roundcorners_enable ? ::state::rounded_corner_normal(roundcorners_radius_mm * 0.00100000005f, roundcorners_across_materials, 1.f) : ::state::normal());
	} in
		material(
			thin_walled: tmp0,
			surface: tmp1,
			backface: tmp2,
			ior: tmp3,
			volume: tmp4,
			geometry: tmp5);
			


// ------------------------ Stainless Steel Brushed Presets ------------------------

// 2 Medium Brushing
export material Steel_Brushed_Medium_Brushing(*)
[[
	::anno::author("NVIDIA vMaterials"),
	::anno::contributor("Rüdiger Raab"),
	::anno::contributor("Maik Rohland"),
	::anno::display_name("Stainless Steel Brushed - Medium Brushing"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Stainless_Steel_Brushed.Steel_Brushed_Medium_Brushing.png"),
	::anno::key_words(string[]("metal", "steel", "anisotropic", "stainless", "brushed", "design", "kitchen", "sanitary", "construction", "automotive", "architecture", "interior", "exterior", "new", "glossy", "smooth", "reflective", "plain", "gray"))
]] = Stainless_Steel_Brushed(
	infinite_tiling:			true,
	roughness:					.61f,		
	steel_anisotropy:			0.53f,
	cloudiness:					0.5f,
	brightness:					0.5f,
	brush_brightness_variation: 0.91f,
	brushing_bump_strength:		0.33f,
	dents_bump_strength:		0.0f,
	dents_scale:				1.2f,
	smudges_1_weight:			0.0f,
	smudges_2_weight:			0.0f,
	smudges_falloff:			0.1f,
	smudges_scale:				2.0f,
	brightness_variation:		0.0f,
	brush_gloss_variation:		0.0f,
	texture_translate:			float2(0.0f),
	texture_rotate:				0.0f,
	texture_scale:				float2(1.0f),
	roundcorners_enable:		false,
	roundcorners_radius_mm:		0.5f,
	roundcorners_across_materials: false,
	uv_space_index:				0
);


// 3 Matte Brushing
export material Steel_Brushed_Matte_Brushing(*)
[[
	::anno::author("NVIDIA vMaterials"),
	::anno::contributor("Rüdiger Raab"),
	::anno::contributor("Maik Rohland"),
	::anno::display_name("Stainless Steel Brushed - Matte Brushing"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Stainless_Steel_Brushed.Steel_Brushed_Matte_Brushing.png"),
	::anno::key_words(string[]("metal", "steel", "anisotropic", "stainless", "brushed", "design", "kitchen", "sanitary", "construction", "automotive", "architecture", "interior", "exterior", "new", "matte", "smooth", "reflective", "plain", "gray"))
]] = Stainless_Steel_Brushed(
	infinite_tiling:			true,
	roughness:					.61f,		
	steel_anisotropy:			0.53f,
	cloudiness:					0.5f,
	brightness:					0.5f,
	brush_brightness_variation: 0.91f,
	brushing_bump_strength:		0.33f,
	dents_bump_strength:		0.0f,
	dents_scale:				1.2f,
	smudges_1_weight:			0.0f,
	smudges_2_weight:			0.0f,
	smudges_falloff:			0.1f,
	smudges_scale:				2.0f,
	brightness_variation:		0.0f,
	brush_gloss_variation:		0.0f,
	texture_translate:			float2(0.0f),
	texture_rotate:				0.0f,
	texture_scale:				float2(1.0f),
	roundcorners_enable:		false,
	roundcorners_radius_mm:		0.5f,
	roundcorners_across_materials: false,
	uv_space_index:				0
);


// 4 Clean Polished Brushing
export material Steel_Brushed_Clean_Polished(*)
[[
	::anno::author("NVIDIA vMaterials"),
	::anno::contributor("Rüdiger Raab"),
	::anno::contributor("Maik Rohland"),
	::anno::display_name("Stainless Steel Brushed - Clean Polished"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Stainless_Steel_Brushed.Steel_Brushed_Clean_Polished.png"),
	::anno::key_words(string[]("metal", "steel", "anisotropic", "stainless", "brushed", "design", "kitchen", "sanitary", "construction", "automotive", "architecture", "interior", "exterior", "new", "shiny", "smooth", "reflective", "plain", "gray"))
]] = Stainless_Steel_Brushed(
	infinite_tiling:			true,
	roughness:					.01f,		
	steel_anisotropy:			0.0f,
	cloudiness:					0.5f,
	brightness:					0.5f,
	brush_brightness_variation: 0.54f,
	brushing_bump_strength:		0.0f,
	dents_bump_strength:		0.0f,
	dents_scale:				1.2f,
	smudges_1_weight:			0.0f,
	smudges_2_weight:			0.0f,
	smudges_falloff:			0.1f,
	smudges_scale:				2.0f,
	brightness_variation:		0.0f,
	brush_gloss_variation:		0.0f,
	texture_translate:			float2(0.0f),
	texture_rotate:				0.0f,
	texture_scale:				float2(1.0f),
	roundcorners_enable:		false,
	roundcorners_radius_mm:		0.5f,
	roundcorners_across_materials: false,
	uv_space_index:				0
);


// 5 Worn
export material Steel_Brushed_Worn(*)
[[
	::anno::author("NVIDIA vMaterials"),
	::anno::contributor("Rüdiger Raab"),
	::anno::contributor("Maik Rohland"),
	::anno::display_name("Stainless Steel Brushed - Worn"),
	::anno::description(DESCRIPTION),
	::anno::copyright_notice(COPYRIGHT),
	::anno::thumbnail("./.thumbs/Stainless_Steel_Brushed.Steel_Brushed_Worn.png"),
	::anno::key_words(string[]("metal", "steel", "anisotropic", "stainless", "brushed", "design", "kitchen", "sanitary", "construction", "automotive", "architecture", "interior", "exterior", "shiny", "worn", "smooth", "reflective", "plain", "gray"))
]] = Stainless_Steel_Brushed(
	infinite_tiling:			true,
	roughness:					.35f,		
	steel_anisotropy:			0.7f,
	cloudiness:					0.5f,
	brightness:					0.5f,
	brush_brightness_variation: 0.74f,
	brushing_bump_strength:		0.0f,
	dents_bump_strength:		1.0f,
	dents_scale:				1.2f,
	smudges_1_weight:			1.0f,
	smudges_2_weight:			1.0f,
	smudges_falloff:			0.1f,
	smudges_scale:				2.0f,
	brightness_variation:		0.8f,
	brush_gloss_variation:		1.0f,
	texture_translate:			float2(0.0f),
	texture_rotate:				0.0f,
	texture_scale:				float2(1.0f),
	roundcorners_enable:		false,
	roundcorners_radius_mm:		0.5f,
	roundcorners_across_materials: false,
	uv_space_index:				0
);